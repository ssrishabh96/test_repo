import { map, evolve, compose } from 'ramda';
import { renameKeys } from 'utils/commonUtils';

const vendorMap = {
  vendor_id: 'vendorId',
  cas_reference_id: 'casRefId',
  country_code: 'countryCode',
  vendor_name: 'vendorName',
  contact_name: 'contactName',
  first_name: 'businessOwnerFirstName',
  last_name: 'businessOwnerLastName',
  middle_name: 'businessOwnerMiddleName',
  vendor_type_code: 'vendorTypeCode',
  legal_id: 'legalId',
  tax_id: 'taxId',
  sync_status: 'syncStatus',
  dispatch_flag: 'dispatchableStatus',
  copart_flag: false,
  created_by: 'createUser',
  updated_by: 'lastUpdateUser',
  source_system: 'sourceSystem',
  corporate_type_code: 'corpTypeCode',
  vendor_short_name: 'vendorShortName',
  number_of_trucks: 'numberOfTrucks',
  daily_capacity: 'dailyCapacity',
  primary_address: 'primaryAddress',
  secondary_mailing_address: 'secondaryMailingAddress',
  billing_address: 'billingAddress',
  secondary_billing_address: 'secondaryBillingAddress',
  primary_phone: 'primaryPhone',
  secondary_phone: 'secondaryPhone',
  vendor_payment_details: 'vendorPaymentDetails',
  vendor_preferences: 'vendorPreferences',
  vendor_insurance: 'vendorInsurance',
  bank_name: 'bankName',
  services: 'services',
  correlation_id: 'correlationId',
};

const vendorAddressMap = {
  created_at: 'createDate',
  updated_at: 'lastUpdateDate',
  created_by: 'createUser',
  updated_by: 'lastUpdateUser',
  source_system: 'sourceSystem',
  correlation_id: 'correlationI',
  address_id: 'addressId',
  communication_id: 'communicationId',
  communication_type_code: 'communicationTypeCode',
  line_1: 'line1',
  line_2: 'line2',
  line_3: 'line3',
  country_code: 'countryCode',
  postal_code: 'postalCode', // missing from API response
  address_detail: 'addressDetail',
  country_description: 'countryDescription',
  state_description: 'stateDescription',
};

const phoneNumberMap = {
  created_at: 'createDate',
  updated_at: 'lastUpdateDate',
  created_by: 'createUser',
  updated_by: 'lastUpdateUser',
  source_system: 'sourceSystem',
  correlation_id: 'correlationId',
  phone_number_id: 'phoneNumId',
  communication_id: 'communicationId',
  communication_type_code: 'communicationTypeCode',
  phone_number: 'phoneNum',
  phone_extension: 'phoneExt',
};

const vendorPaymentMap = {
  created_at: 'createDate',
  updated_at: 'lastUpdateDate',
  created_by: 'createUser',
  updated_by: 'lastUpdateUser',
  source_system: 'sourceSystem',
  correlation_id: 'correlationId',
  payment_id: 'paymentId',
  vendor_id: 'vendorId',
  account_number: 'acctNum',
  confirm_account_number: 'confirmAcctNum',
  institution_id: 'institutionId',
  routing_number: 'routingNumber',
  confirm_routing_number: 'confirmRoutingNumber',
  iban_account_number: 'ibanAcctNumber',
  confirm_iban_account_number: 'confirmIbanAcctNumber',
  bank_country_code: 'bankCountryCode',
  start_date: 'startDate',
  end_date: 'endDate',
  cancel_date: 'cancelDate',
  sync_status: 'syncStatus',
  payment_method_code: 'paymentMethodCode',
};

const vendorPreferenceMap = {
  created_at: 'createDate',
  updated_at: 'lastUpdateDate',
  created_by: 'createUser',
  updated_by: 'lastUpdateUser',
  source_system: 'sourceSystem',
  correlation_id: 'correlationId',
  vendor_preference_id: 'vendorPreferenceId',
  preference_id: 'preferenceId',
  vendor_id: 'vendorId',
  preference_category_code: 'preferenceCategoryCode',
  preference_code: 'preferenceCode',
  facility_id: 'facilityId',
  communication_id: 'communicationId',
};

const vendorInsuranceMap = {
  created_at: 'createDate',
  updated_at: 'lastUpdateDate',
  created_by: 'createUser',
  updated_by: 'lastUpdateUser',
  source_system: 'sourceSystem',
  correlation_id: 'correlationId',
  insurance_id: 'insuranceId',
  vendor_id: 'vendorId',
  insurance_company_name: 'insuranceCompanyName',
  insurance_policy_number: 'insurancePolicyNumber',
  insurance_expiration_date: 'insuranceExpirationDate',
  insurance_email: 'insuranceEmail@copart.com',
  insurance_appr_rate_change: 'insuranceApprRateChange',
  insurance_rate_difference_amount: 'insuranceRateDifferenceAmount',
  contact_name: 'contactName',
  primary_flag: 'primaryFlag',
};

const vendorInfoMapper = {
  primaryAddress: renameKeys(vendorAddressMap),
  secondaryMailingAddress: renameKeys(vendorAddressMap),
  billingAddress: renameKeys(vendorAddressMap),
  secondaryBillingAddress: renameKeys(vendorAddressMap),
  primaryPhone: renameKeys(phoneNumberMap),
  secondaryPhone: renameKeys(phoneNumberMap),
  vendorPaymentDetails: renameKeys(vendorPaymentMap),
  vendorPreferences: renameKeys(vendorPreferenceMap),
  vendorInsurance: renameKeys(vendorInsuranceMap),
};

const mapVendorInfoItems = evolve(vendorInfoMapper);
export const vendorMapper = compose(mapVendorInfoItems, renameKeys(vendorMap));
